---
import type { CollectionEntry } from "astro:content";
// import TableOfContents from '@components/TableOfContents.astro'
import BaseLayout from "@/layouts/BaseLayout.astro";
import { formatDate } from "@/utils/date";
import type { MarkdownHeading } from "astro";
import { getReadingTime } from "@/utils/reading-time";
import TableOfContents from "@/components/features/TableOfContents.astro";
import Container from "@/components/layout/Container.astro";
import Badge from "@/components/ui/Badge.astro";
import { Hash } from "@lucide/astro";

interface Props {
  post: CollectionEntry<"blog">;
  headings: MarkdownHeading[];
}

const { post, headings } = Astro.props;
const formattedTime = formatDate(post.data.pubDate);
const readingTime = getReadingTime(post.body || "");
---

<BaseLayout
  title={post.data.title}
  description={post.data.description || ""}
  image={post.data.image?.src}
  openGraphType="article"
>
  <section class="py-16 sm:py-24">
    <Container size="sm">
      <article class="prose max-w-none dark:prose-invert">
        <header class="not-prose mb-8">
          <div class="flex items-center gap-3 text-sm text-gray-500 dark:text-gray-400">
            <time datetime={post.data.pubDate.toISOString()}>{formattedTime}</time>
            <span>•</span>
            {readingTime && <span>{readingTime}</span>}
          </div>
          <h1 class="heading mt-2 mb-4 text-4xl">{post.data.title}</h1>
          {
            post.data.tags && (
              <div class="flex flex-wrap gap-2">
                {post.data.tags.map((tag: string) => (
                  <a href={`/tags/${tag}`} title="tag">
                    <Badge variant="outline" class="btn rd-md px-2 py-1 text-sm">
                      <Hash size="14" />
                      {tag}
                    </Badge>
                  </a>
                ))}
              </div>
            )
          }
        </header>

        {
          headings.length > 0 && (
            <details class="not-prose themed mb-8 rounded-lg bg-gray-200 dark:bg-gray-800">
              <summary class="hover:text-primary-500 cursor-pointer px-4 py-3 font-medium transition-colors">
                目录
              </summary>
              <div class="px-4 pb-4">
                <TableOfContents headings={headings} />
              </div>
            </details>
          )
        }

        <slot />
      </article>
    </Container>
  </section>
</BaseLayout>
