---
import { siteConfig } from "@/config";
import type { HeadProps } from "@/types";

type Props = HeadProps;

const {
  title,
  description = siteConfig.description,
  image = "/favicon.svg",
  canonicalURL = new URL(Astro.url.pathname, Astro.site),
  openGraphType = "website",
} = Astro.props;

const pageTitle = title === siteConfig.title ? title : `${title} | ${siteConfig.title}`;
const imageURL = new URL(image, Astro.url);
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="canonical" href={canonicalURL} />
<meta name="generator" content={Astro.generator} />

<title>{pageTitle}</title>
<meta name="title" content={pageTitle} />
<meta name="description" content={description} />
<meta name="author" content={siteConfig.author} />
<link rel="sitemap" href="/sitemap-index.xml" />
<link rel="alternate" type="application/rss+xml" title={siteConfig.title} href={new URL("/rss.xml", Astro.site)} />

<!-- open graph -->
<meta property="og:site_name" content={Astro.site} />
<meta property="og:title" content={pageTitle} />
<meta property="og:description" content={description} />
<meta property="og:type" content={openGraphType} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:image" content={imageURL} />
<meta content="800" property="og:image:width" />
<meta content="400" property="og:image:height" />
<meta content="image/png" property="og:image:type" />

<!-- twitter/x -->
<meta property="twitter:card" content={imageURL ? "summary_large_image" : "summary"} />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={pageTitle} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={imageURL} />
